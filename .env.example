# Environment Variables for Rental Management App
# Copy this file to .env.local and fill in your actual values

# =============================================================================
# NextAuth.js Configuration
# =============================================================================

# NextAuth URL - The canonical URL of your site
# Development: http://localhost:3000
# Production: https://yourdomain.com
NEXTAUTH_URL=http://localhost:3000

# NextAuth Secret - Used to encrypt JWT tokens and session cookies
# IMPORTANT: Generate a secure random string (32+ characters)
# You can generate one with: openssl rand -base64 32
# NEVER use the same secret in different environments
NEXTAUTH_SECRET=your-super-secret-key-here-change-this-in-production

# =============================================================================
# Database Configuration
# =============================================================================

# PostgreSQL Database URL
# Format: postgresql://username:password@host:port/database_name?options
# Local development example:
DATABASE_URL="postgresql://postgres:password@localhost:5432/rental_management_dev"

# Production examples:
# Neon: postgresql://username:password@ep-xxx.us-east-1.aws.neon.tech/rental_management_prod
# Supabase: postgresql://postgres:password@db.xxx.supabase.co:5432/postgres
# Railway: postgresql://postgres:password@containers-us-west-xxx.railway.app:6543/railway

# =============================================================================
# OAuth Provider Configuration (Optional - add when implementing OAuth)
# =============================================================================

# Google OAuth Configuration
# Get these from: https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret

# GitHub OAuth Configuration  
# Get these from: https://github.com/settings/applications/new
GITHUB_ID=your-github-app-id
GITHUB_SECRET=your-github-app-secret

# =============================================================================
# Email Configuration (For verification, password reset, etc.)
# =============================================================================

# Email provider - options: sendgrid, ses, smtp
EMAIL_PROVIDER=smtp

# SMTP Configuration (for development, use Mailtrap or similar)
SMTP_HOST=smtp.mailtrap.io
SMTP_PORT=2525
SMTP_USER=your-mailtrap-username
SMTP_PASS=your-mailtrap-password
SMTP_FROM=no-reply@yourdomain.com

# SendGrid Configuration (for production)
# SENDGRID_API_KEY=your-sendgrid-api-key
# SENDGRID_FROM=no-reply@yourdomain.com

# AWS SES Configuration (for production)
# AWS_REGION=us-east-1
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# SES_FROM_EMAIL=no-reply@yourdomain.com

# =============================================================================
# Application Configuration
# =============================================================================

# Environment - affects logging, error handling, security settings
NODE_ENV=development

# Application Name - used in emails and branding
APP_NAME="Rental Management App"

# Application URL - used for generating links in emails
APP_URL=http://localhost:3000

# Support Email - where users can get help
SUPPORT_EMAIL=support@yourdomain.com

# =============================================================================
# Security Configuration
# =============================================================================

# CORS Origins - comma-separated list of allowed origins
# Development: http://localhost:3000,http://localhost:3001
# Production: https://yourdomain.com,https://admin.yourdomain.com
CORS_ORIGINS=http://localhost:3000

# Rate Limiting Configuration
RATE_LIMIT_MAX=100  # Maximum requests per window
RATE_LIMIT_WINDOW=15 # Window in minutes

# Session Configuration
SESSION_MAX_AGE=2592000  # 30 days in seconds
SESSION_UPDATE_AGE=86400 # 1 day in seconds

# =============================================================================
# File Upload Configuration
# =============================================================================

# Storage provider - options: local, s3, cloudinary
STORAGE_PROVIDER=local

# Local storage (development)
UPLOADS_DIR=./uploads

# AWS S3 Configuration (production)
# AWS_S3_BUCKET=your-s3-bucket-name
# AWS_S3_REGION=us-east-1
# AWS_S3_ACCESS_KEY_ID=your-s3-access-key
# AWS_S3_SECRET_ACCESS_KEY=your-s3-secret-key

# Cloudinary Configuration (alternative)
# CLOUDINARY_CLOUD_NAME=your-cloud-name
# CLOUDINARY_API_KEY=your-api-key
# CLOUDINARY_API_SECRET=your-api-secret

# =============================================================================
# Payment Configuration (Future)
# =============================================================================

# Stripe Configuration
# STRIPE_PUBLISHABLE_KEY=pk_test_...
# STRIPE_SECRET_KEY=sk_test_...
# STRIPE_WEBHOOK_SECRET=whsec_...

# =============================================================================
# Analytics & Monitoring (Optional)
# =============================================================================

# Google Analytics
# GA_TRACKING_ID=G-XXXXXXXXXX

# Posthog Analytics
# NEXT_PUBLIC_POSTHOG_KEY=your-posthog-key
# NEXT_PUBLIC_POSTHOG_HOST=https://app.posthog.com

# Sentry Error Tracking
# SENTRY_DSN=your-sentry-dsn

# =============================================================================
# Development Tools
# =============================================================================

# Enable debug logging
DEBUG=false

# Prisma Studio Port
PRISMA_STUDIO_PORT=5555

# Next.js Development Port
PORT=3000

# =============================================================================
# SECURITY NOTES
# =============================================================================

# 1. NEVER commit this file with real values to version control
# 2. Use different secrets for each environment (dev, staging, prod)
# 3. Store production secrets in your hosting platform's secret manager
# 4. Regularly rotate secrets, especially NEXTAUTH_SECRET
# 5. Use environment-specific database URLs
# 6. Enable 2FA on all accounts used to obtain these credentials

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# 1. Copy this file to .env:
#    cp .env.example .env

# 2. Generate a secure NEXTAUTH_SECRET:
#    openssl rand -base64 32

# 3. Set up your local PostgreSQL database:
#    createdb rental_management_dev

# 4. Update DATABASE_URL with your database credentials

# 5. Run Prisma migrations:
#    npx prisma migrate dev

# 6. (Optional) Set up OAuth applications for Google/GitHub

# 7. Start the development server:
#    npm run dev